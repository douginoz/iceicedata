{
    "config": {
        "abort": {
            "already_configured": "El dispositivo ya est\u00e1 configurado",
            "already_in_progress": "El flujo de configuraci\u00f3n ya est\u00e1 en curso",
            "no_devices_found": "No se encontraron dispositivos en la red",
            "reauth_successful": "La autenticaci\u00f3n se volvi\u00f3 a realizar correctamente"
        },
        "error": {
            "decryption_failed": "La clave de enlace proporcionada no funcion\u00f3, los datos del sensor no se pudieron descifrar. Por favor, compru\u00e9balo e int\u00e9ntalo de nuevo.",
            "expected_24_characters": "Se esperaba una clave de enlace hexadecimal de 24 caracteres.",
            "expected_32_characters": "Se esperaba una clave de enlace hexadecimal de 32 caracteres."
        },
        "flow_title": "{name}",
        "step": {
            "bluetooth_confirm": {
                "description": "\u00bfQuieres configurar {name}?"
            },
            "confirm_slow": {
                "description": "No ha habido una transmisi\u00f3n desde este dispositivo en el \u00faltimo minuto, por lo que no estamos seguros de si este dispositivo usa cifrado o no. Esto puede deberse a que el dispositivo utiliza un intervalo de transmisi\u00f3n lento. Confirma para a\u00f1adir este dispositivo de todos modos, luego, la pr\u00f3xima vez que se reciba una transmisi\u00f3n, se te pedir\u00e1 que ingreses su clave de enlace si es necesario."
            },
            "get_encryption_key_4_5": {
                "data": {
                    "bindkey": "Clave de enlace"
                },
                "description": "Los datos del sensor transmitidos por el sensor est\u00e1n cifrados. Para descifrarlos necesitamos una clave de enlace hexadecimal de 32 caracteres."
            },
            "get_encryption_key_legacy": {
                "data": {
                    "bindkey": "Clave de enlace"
                },
                "description": "Los datos del sensor transmitidos por el sensor est\u00e1n cifrados. Para descifrarlos necesitamos una clave de enlace hexadecimal de 24 caracteres."
            },
            "user": {
                "data": {
                    "address": "Dispositivo"
                },
                "description": "Elige un dispositivo para configurar"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "double_press": "Doble pulsaci\u00f3n",
            "long_press": "Pulsaci\u00f3n larga",
            "motion_detected": "Detectado movimiento",
            "press": "Pulsaci\u00f3n",
            "rotate_left": "Girar a la izquierda",
            "rotate_left_pressed": "Girar a la izquierda (pulsado)",
            "rotate_right": "Girar a la derecha",
            "rotate_right_pressed": "Girar a la derecha (pulsado)"
        },
        "trigger_type": {
            "button": "Bot\u00f3n \"{subtype}\"",
            "button_air_exchange": "Bot\u00f3n Intercambio de aire \"{subtype}\"",
            "button_brightness": "Bot\u00f3n Brillo \"{subtype}\"",
            "button_color_temperature": "Bot\u00f3n Temperatura de color \"{subtype}\"",
            "button_decrease_speed": "Bot\u00f3n Reducir velocidad \"{subtype}\"",
            "button_decrease_wind_speed": "Bot\u00f3n Reducir la velocidad del viento \"{subtype}\"",
            "button_dry": "Bot\u00f3n Seco \"{subtype}\"",
            "button_fan": "Bot\u00f3n Ventilador \"{subtype}\"",
            "button_heat": "Bot\u00f3n Calor \"{subtype}\"",
            "button_increase_speed": "Bot\u00f3n Aumentar velocidad \"{subtype}\"",
            "button_increase_wind_speed": "Bot\u00f3n Aumentar la velocidad del viento \"{subtype}\"",
            "button_left": "Bot\u00f3n izquierdo \"{subtype}\"",
            "button_light": "Bot\u00f3n Light \"{subtype}\"",
            "button_m": "Bot\u00f3n M \"{subtype}\"",
            "button_middle": "Bot\u00f3n central \"{subtype}\"",
            "button_min": "Bot\u00f3n Min \"{subtype}\"",
            "button_off": "Bot\u00f3n Off \"{subtype}\"",
            "button_on": "Bot\u00f3n On \"{subtype}\"",
            "button_plus": "Bot\u00f3n Plus \"{subtype}\"",
            "button_power": "Bot\u00f3n Power \"{subtype}\"",
            "button_right": "Bot\u00f3n derecho \"{subtype}\"",
            "button_stop": "Bot\u00f3n Detener \"{subtype}\"",
            "button_swing": "Bot\u00f3n Oscilaci\u00f3n \"{subtype}\"",
            "button_timer_30_minutes": "Bot\u00f3n Temporizador 30 minutos \"{subtype}\"",
            "button_timer_60_minutes": "Bot\u00f3n Temporizador 30 minutos \"{subtype}\"",
            "button_wind_mode": "Bot\u00f3n Modo de viento \"{subtype}\"",
            "button_wind_speed": "Bot\u00f3n Velocidad del viento \"{subtype}\"",
            "cube": "{subtype}",
            "dimmer": "{subtype}",
            "motion": "{subtype}",
            "motion_detected": "Movimiento detectado"
        }
    },
    "entity": {
        "event": {
            "button": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Doble pulsaci\u00f3n",
                            "long_press": "Pulsaci\u00f3n larga",
                            "press": "Pulsaci\u00f3n"
                        }
                    }
                }
            },
            "cube": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "rotate_left": "Girar a la izquierda",
                            "rotate_right": "Girar a la derecha"
                        }
                    }
                }
            },
            "dimmer": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "long_press": "Pulsaci\u00f3n larga",
                            "press": "Pulsar",
                            "rotate_left": "Girar a la izquierda",
                            "rotate_left_pressed": "Girar a la izquierda (pulsado)",
                            "rotate_right": "Girar a la derecha",
                            "rotate_right_pressed": "Girar a la derecha (pulsado)"
                        }
                    }
                }
            },
            "motion": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "motion_detected": "Detectado movimiento"
                        }
                    }
                }
            }
        }
    }
}